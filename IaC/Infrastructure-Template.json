{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.1008.15138",
        "templateHash": "6761373798632181090"
      }
    },
    "parameters": {
      "skuName": {
        "type": "string",
        "defaultValue": "F1",
        "allowedValues": [
          "F1",
          "D1",
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P1",
          "P2",
          "P3",
          "P4"
        ]
      },
      "skuCapacity": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1
      },
      "sqlAdministratorLogin": {
        "type": "string",
        "defaultValue": "dbadminuser"
      },
      "sqlAdministratorLoginPassword": {
        "type": "secureString",
        "defaultValue": "44!,h{/FugEVnw+V"
      }
    },
    "functions": [],
    "variables": {
      "hostingPlanName": "[format('hostingplan{0}', uniqueString(resourceGroup().id))]",
      "webSiteName": "[format('webSite{0}', uniqueString(resourceGroup().id))]",
      "sqlserverName": "[format('sqlserver{0}', uniqueString(resourceGroup().id))]",
      "databaseName": "sampledb"
    },
    "resources": [
      {
        "type": "Microsoft.Sql/servers",
        "apiVersion": "2019-06-01-preview",
        "name": "[variables('sqlserverName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "administratorLogin": "[parameters('sqlAdministratorLogin')]",
          "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
          "version": "12.0"
        }
      },
      {
        "type": "Microsoft.Sql/servers/databases",
        "apiVersion": "2020-08-01-preview",
        "name": "[format('{0}/{1}', variables('sqlserverName'), variables('databaseName'))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Basic"
        },
        "properties": {
          "collation": "SQL_Latin1_General_CP1_CI_AS",
          "maxSizeBytes": 1073741824
        },
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
        ]
      },
      {
        "type": "Microsoft.Sql/servers/firewallRules",
        "apiVersion": "2014-04-01",
        "name": "[format('{0}/AllowAllWindowsAzureIps', variables('sqlserverName'))]",
        "properties": {
          "endIpAddress": "255.255.255.255",
          "startIpAddress": "0.0.0.0"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]"
        ]
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2020-06-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "[parameters('skuName')]",
          "capacity": "[parameters('skuCapacity')]"
        }
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2020-06-01",
        "name": "[variables('webSiteName')]",
        "location": "[resourceGroup().location]",
        "tags": {
          "[format('hidden-related:{0}', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "empty",
          "displayName": "Website"
        },
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
        ]
      },
      {
        "type": "Microsoft.Web/sites/config",
        "apiVersion": "2020-06-01",
        "name": "[format('{0}/connectionstrings', variables('webSiteName'))]",
        "properties": {
          "DefaultConnection": {
            "value": "[format('Data Source=tcp:{0},1433;Initial Catalog={1};User Id={2}@{3};Password={4};', reference(resourceId('Microsoft.Sql/servers', variables('sqlserverName'))).fullyQualifiedDomainName, variables('databaseName'), parameters('sqlAdministratorLogin'), reference(resourceId('Microsoft.Sql/servers', variables('sqlserverName'))).fullyQualifiedDomainName, parameters('sqlAdministratorLoginPassword'))]",
            "type": "SQLAzure"
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]",
          "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
        ]
      },
      {
        "type": "Microsoft.Web/sites/config",
        "name": "[format('{0}/appsettings', variables('webSiteName'))]",
        "apiVersion": "2015-08-01",
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', variables('sqlserverName'))]",
          "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
        ],
        "properties": {
            "db_host": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlserverName'))).fullyQualifiedDomainName]",
            "db_user": "[parameters('sqlAdministratorLogin')]",
            "db_password": "[parameters('sqlAdministratorLoginPassword')]",
            "db_name" : "[variables('databaseName')]",
            "SCM_DO_BUILD_DURING_DEPLOYMENT" : "true",
            "WEBSITE_NODE_DEFAULT_VERSION" : "6.9.1"
        }
      },
      {
        "type": "Microsoft.Web/sites/sourcecontrols",
        "apiVersion": "2021-02-01",
        "name": "[format('{0}/{1}', variables('webSiteName'), 'web')]",
        "properties": {
          "repoUrl": "https://github.com/mkelepe/CSU-Hackfest-Lab-App",
          "branch": "main",
          "isManualIntegration": true
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
        ]
      },
      {
        "type": "Microsoft.Insights/components",
        "apiVersion": "2018-05-01-preview",
        "name": "[format('AppInsights{0}', variables('webSiteName'))]",
        "location": "[resourceGroup().location]",
        "tags": {
          "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', variables('webSiteName')))]": "Resource",
          "displayName": "AppInsightsComponent"
        },
        "kind": "web",
        "properties": {
          "Application_Type": "web"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
        ]
      }
    ]
  }